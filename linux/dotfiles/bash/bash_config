#!/usr/bin/env bash

#################################
# BASH INITIALIZE
#################################
[[ $- != *i* ]] && return
PROMPT_COMMAND='echo -ne "\033]0;${PWD/#$HOME/\~}\007"'
PS1='\n\[\e[0;1;91m\][ \[\e[0;1;93m\]\t \[\e[0;1;96m\]\u\[\e[0;1;96m\]@\[\e[0;1;96m\]\h \[\e[0;1;92m\]\W \[\e[0;1;91m\]]\n\[\e[0;1m\]\$ \[\e[0m\]'

if ! shopt -oq posix; then
	if [[ -f /usr/share/bash-completion/bash_completion ]]; then
		builtin source /usr/share/bash-completion/bash_completion
	elif [[ -f /etc/bash_completion ]]; then
		builtin source /etc/bash_completion
	fi
fi

HISTCONTROL=ignoreboth:erasedups
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend
shopt -s checkwinsize

#################################
# BASH ALIASES
#################################
alias please="sudo "
alias diff="diff --color=auto"
alias free="free --mebi --lohi --total --wide"
alias grep="grep --color=auto"
alias ln="ln --interactive --verbose"
alias lsblk="lsblk --output NAME,LABEL,MOUNTPOINT,FSTYPE,SIZE,FSUSED,FSUSE%,HOTPLUG"
alias ls="ls --all --human-readable -l --time-style=+'%Y-%m-%d %a %I:%M:%S %p' --color=auto"
# alias ls="\ls --all --group-directories-first --human-readable -l --indicator-style=slash --time-style=+'%Y-%m-%d %a %I:%M:%S %p'" # no colors
alias mkdir="mkdir --parents --verbose"
alias mv="mv --interactive --verbose"
alias rm="rm  --interactive=once --verbose"
alias rmdir="rmdir --verbose"
alias wget="wget --show-progress"

alias yt-audio="youtube-dl --ignore-errors --verbose --extract-audio --audio-format mp3 --audio-quality 0 --output '%(title)s.%(ext)s'"
alias yt-audio-playlist="youtube-dl --ignore-errors --verbose --extract-audio --audio-format mp3 --audio-quality 0 --output '%(playlist)s/%(title)s.%(ext)s'"
alias yt-audio-playlist-index="youtube-dl --ignore-errors --verbose --extract-audio --audio-format mp3 --audio-quality 0 --output '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'"
alias yt-audio-playlist-index-channel="youtube-dl --ignore-errors --verbose --extract-audio --audio-format mp3 --audio-quality 0 --output '%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'"
alias yt-video="youtube-dl --ignore-errors --verbose -f 'bestvideo+bestaudio' --output '%(title)s.%(ext)s'"
alias yt-video-playlist="youtube-dl --ignore-errors --verbose -f 'bestvideo+bestaudio' --output '%(playlist)s/%(title)s.%(ext)s'"
alias yt-video-playlist-index="youtube-dl --ignore-errors --verbose -f 'bestvideo+bestaudio' --output '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'"
alias yt-video-playlist-index-channel="youtube-dl --ignore-errors --verbose -f 'bestvideo+bestaudio' --output '%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'"

alias s76-per="sudo system76-power profile performance"
alias s76-bal="sudo system76-power profile balanced"
alias s76-bat="sudo system76-power profile battery"

#################################
# BASH FUNCTIONS
#################################
cpsync() { ( rsync --verbose --recursive --human-readable --progress "$@" && printf '\nSyncing cached writes...' && sync && printf 'Done' ) || return; }
mkcd() { ( mkdir --parents --verbose "$1" && builtin cd "$1" ) || return; }
cdls() { ( builtin cd "$*" && ls ) || return; }
search() { find "$1" -iname "*$2*"; }
condaon() { conda config --set auto_activate_base true && builtin source "$HOME/.bashrc" "$HOME/.bash_config" && echo 'Conda base environment is ENABLED.'; }
condaoff() { conda config --set auto_activate_base false && builtin source "$HOME/.bashrc" "$HOME/.bash_config" && echo 'Conda base environment is DISABLED.'; }
wsl-compact-memory() { sudo bash -c "echo 1 > /proc/sys/vm/compact_memory" && echo 'Done'; }
wsl-drop-cache() { sudo bash -c "echo 1 > /proc/sys/vm/drop_caches" && echo 'Done'; }
wsl-shutdown-all() { powershell.exe wsl.exe --shutdown; }

[[ -f "$HOME/src/sherlock/sherlock" ]] && sherlock() { python3 "$HOME/src/sherlock/sherlock" "$@"; }

[[ -f "$HOME/src/shellcheck-stable/shellcheck" ]] && shellcheck() { "$HOME/src/shellcheck-stable/shellcheck" "$@"; }

[[ -d "$HOME/stuff/.git" ]] && cfg() { builtin cd "$HOME/stuff" && git status -s && git log --oneline -n 10; }

adb-removed-apps() {
	cat <<-'EOF'
	RE-INSTALL PACKAGES : adb shell "cmd package install-existing <package_name>"
	EOF
	adb shell "(pm list packages -u && pm list packages) | sort | uniq -u | cut -c 9-"

	cat <<-'EOF'
	RE-ENABLE PACKAGES : adb shell "pm enable --user 0 <package_name>"
	EOF
	adb shell "pm list packages -d | cut -c 9-"
}

codexec() {
	if [[ -f "$1" ]]; then
		case "$1" in
			*.c)		if [[ -f ./"${1%.c}" ]]; then rm -f ./"${1%.c}"; fi;
					gcc "$1" -g3 -Wall -o "${1%.c}" && ./"${1%.c}" && printf "\n" ;;
			*.py)		if [[ -d ./__pycache__ ]]; then rm -rf ./__pycache__; fi;
					python3 -m py_compile "$1" && python3 "$1" ;;
			*.java)		java "$1" ;;
			*)		echo 'Unsupported file.' ;;
		esac
	else
		echo 'Unsupported file.'
	fi
}

